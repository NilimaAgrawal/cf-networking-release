#!/bin/bash -eu

<% unless p("cf_networking.disable") %>
source /var/vcap/packages/ctl-utils/ctl_util.sh

RUN_DIR=/var/vcap/sys/run/vxlan-policy-agent
LOG_DIR=/var/vcap/sys/log/vxlan-policy-agent
export PIDFILE=${RUN_DIR}/vxlan-policy-agent.pid
URL=127.0.0.1:<%= p("cf_networking.vxlan_policy_agent.debug_server_port")%>/log-level
TIMEOUT=20

mkdir -p /var/vcap/sys/log/monit
exec 1>> /var/vcap/sys/log/monit/vxlan-policy-agent.out.log
exec 2>> /var/vcap/sys/log/monit/vxlan-policy-agent.err.log

case $1 in

  start)
  trap 'handle_orphaned_server vxlan-policy-agent ${pid}' TERM

    mkdir -p ${RUN_DIR}
    mkdir -p ${LOG_DIR}

    /var/vcap/packages/vxlan-policy-agent/bin/vxlan-policy-agent \
         -config-file=/var/vcap/jobs/vxlan-policy-agent/config/vxlan-policy-agent.json \
         2> >(tee -a ${LOG_DIR}/vxlan-policy-agent.stderr.log | logger -p user.error -t vxlan-policy-agent) \
         1> >(tee -a ${LOG_DIR}/vxlan-policy-agent.stdout.log | logger -t vxlan-policy-agent) &

    pid=$!

    healthy=$(wait_for_server_to_become_healthy ${URL} ${TIMEOUT})
    write_pid ${healthy} ${pid}

    ;;

  stop)

    stop_process

    ;;

  *)
    echo "Usage: $0 {start|stop}"

    ;;

esac
<% end %>
